{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/dateEvent.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","initialSate","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchNotToken","endPoint","data","method","url","fetch","headers","body","JSON","stringify","fetchToken","token","localStorage","getItem","dateEvents","event","start","moment","toDate","end","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword1","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","respuesta","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f098ce7c.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventSetActive: '[event] Set active',\n    eventStartAddNew: '[event] Set add new',\n    eventAddNew: '[event] Add new',\n    eventClearLogout: '[event] Clear logout',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Event loaded',\n\n    authCheckingFinish: '[auth] Checking login finish',\n\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n\n\n// {\n//     id: new Date().getTime(),\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Fernando'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n\n        case types.eventClearLogout:\n            return {\n                ...initialState\n            }\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\r\n \r\nconst initialSate = {\r\n    checking: true\r\n}\r\n\r\n\r\nexport const AuthReducer = ( state = initialSate, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload,\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            }\r\n        \r\n        case types.authLogout:\r\n            return {\r\n                checking: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { AuthReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: AuthReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","const baseUrl = process.env.REACT_APP_API_URL\r\n\r\n\r\nexport const fetchNotToken = ( endPoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endPoint }`;\r\n\r\n    if ( endPoint === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport const fetchToken = ( endPoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endPoint }`;\r\n\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( endPoint === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            },          \r\n        } );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\n","import moment from 'moment';\r\n\r\n\r\nexport const dateEvents = ( events = [] ) => {\r\n    // console.log(events)\r\n    return events.map( ( event ) => ({\r\n        ...event,\r\n        start: moment( event.start ).toDate(),\r\n        end: moment( event.end ).toDate()\r\n    }))\r\n}","import Swal from 'sweetalert2';\nimport { dateEvents } from '../helpers/dateEvent';\nimport { fetchToken } from '../helpers/fetch';\nimport { types } from '../types/types';\n\n\n\n\nexport const eventStartAddNew = ( event ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const respuesta = await fetchToken( 'events/new', event, 'POST' );\n            const body = await respuesta.json(); \n            // console.log(body)\n\n            if ( body.ok ) {\n\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name: name,\n                }\n\n                dispatch( eventAddNew( event ) );\n            }\n        } catch (error) {\n            console.log(error);\n            Swal.fire('Error', 'No se pudo completar la operación', 'error');\n        }\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\n\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventStartUpdated = ( event ) => {\n    return async( dispatch ) => {\n\n        try {\n            \n            const respuesta = await fetchToken( `events/${ event.id }`, event, 'PUT' );\n            const body = await respuesta.json(); \n            // console.log(body)\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            console.log(error);\n            Swal.fire('Error', 'No se pudo completar la operación', 'error');\n        }\n    }\n}\n\n\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartDelete = () => {\n    return async( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n        try {\n            console.log(id)\n            const respuesta = await fetchToken( `events/${ id }`, {}, 'DELETE' );\n            const body = await respuesta.json(); \n\n            // console.log(body)\n            if ( body.ok ) {\n\n                dispatch( eventDeleted() );\n\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log(error);\n            Swal.fire('Error', 'No se pudo completar la operación', 'error');            \n        }\n    }\n}\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\nexport const eventStartLoaded = () => {\n    return async( dispatch ) => {\n\n        try {\n            const respuesta = await fetchToken( 'events' );\n            const body = await respuesta.json(); \n            // console.log(body)\n\n            // const events = body.event\n            const events = dateEvents( body.event );\n            dispatch( eventLoaded( events ) );\n\n        } catch (error) {\n            console.log(error);\n            Swal.fire('Error', 'No se pudo completar la operación', 'error');\n        }\n    }\n}\n\n\nconst eventLoaded = ( events ) => ({\n    type: types.eventLoaded,\n    payload: events,\n})\n\nexport const eventClearLogout = () => ({ type: types.eventClearLogout });","import { fetchNotToken, fetchToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport Swal from 'sweetalert2';\r\nimport { eventClearLogout } from './events';\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        // console.log(email, password)\r\n        const respuesta = await fetchNotToken( 'auth', { email, password }, 'POST' );\r\n    \r\n        const body = await respuesta.json();\r\n\r\n        // console.log(body)\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n        const respuesta = await fetchNotToken( 'auth/new', { email, password, name }, 'POST' );\r\n    \r\n        const body = await respuesta.json();\r\n\r\n        // console.log(body.ok)\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n        const respuesta = await fetchToken( 'auth/renew');\r\n    \r\n        const body = await respuesta.json();\r\n\r\n        // console.log(body.ok) \r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {          \r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n};\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish,\r\n});\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( eventClearLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout,\r\n})","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        loginEmail: 'fabi@gmail.com',\n        loginPassword: '123456',\n    });\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        registerName: 'Fabian',\n        registerEmail: 'fabian@gmail.com',\n        registerPassword1: '123456',\n        registerPassword2: '123456',\n    });\n\n    const { loginEmail, loginPassword } = formLoginValues;\n\n    const { registerName, registerEmail, registerPassword1, registerPassword2} = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        // console.log(formLoginValues)\n        dispatch( startLogin(loginEmail, loginPassword) );\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        dispatch( startRegister(registerEmail, registerPassword1, registerName) );\n\n        if ( registerPassword1 !== registerPassword2 ) {\n            return Swal.fire( 'Error', 'Las contraseñas deben ser iguales', 'error' );\n        }\n        console.log(e.target)\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"loginEmail\"\n                                value={ loginEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"loginPassword\"\n                                value={ loginPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegister } >\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"registerName\"\n                                value={ registerName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"registerEmail\"\n                                value={ registerEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"registerPassword1\"\n                                value={ registerPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"registerPassword2\"\n                                value={ registerPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\nconst { name } = useSelector( state => state.auth );\n\nconst dispatch = useDispatch();\n\nconst handleLogout = () => {\n    dispatch( startLogout() );    \n}\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n            \n            <button\n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdated( formValues ) )\n        } else {\n            dispatch( eventStartAddNew( formValues ) );\n        }\n\n        setTitleValid(true);\n        closeModal();\n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoaded } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { uid } = useSelector( state => state.auth );\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n\n    useEffect(() => {\n\n        dispatch( eventStartLoaded() );\n\n    }, [ dispatch ])\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        \n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component : Component,\r\n    ...rest\r\n}) => {\r\n\r\n    //localStorage.setItem('lastPath', rest.location.pathname);\r\n    \r\n    return (\r\n        <Route { ...rest } \r\n            component={( props ) =>(\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to='/login' /> )\r\n            )}  \r\n        />\r\n    );\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\nconst { checking, uid } = useSelector( state => state.auth );\n// console.log(checking)\nconst dispatch = useDispatch();\n\nuseEffect(() => {\n    \n    dispatch( startChecking() );\n    \n}, [ dispatch ])\n\nif ( checking ) {\n    return (<h5>Espere...</h5>);\n}\n\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/login\"\n                        component={ LoginScreen }\n                        isAuthenticated={ !!uid } // !!uid en la consola devuelve true (hago esto xq debe devolver un boleano para autenticar)\n                    />    \n                    {\n                    /* !!uid true\n                    !uid false\n                    !!null false\n                    !null true  */\n                    }\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component={ CalendarScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}